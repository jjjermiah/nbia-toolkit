name: Unit Tests
  
# only run on pushes to main or pull requests
on:
  push:
    # push to any branch
    branches: [ main ]
  pull_request:
    branches: [ main ]
  
jobs:  
  Continuous-Integration:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.12"]
  
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        uses: snok/install-poetry@v1

      - name: Install package
        run: poetry install

      - name: Test with pytest
        run: poetry run pytest

      - name: Use Codecov to track coverage
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml

      - name: Build documentation
        run: poetry run make html --directory docs/

  Continuous-Deployment:
    # needs: Continuous-Integration

    # if pulling to main, deploy to PyPI
    if: github.ref == 'refs/heads/main'

    # Set up operating system
    runs-on: ubuntu-latest

    # Define job steps
    steps:
    - name: Set up Python 3.12
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Check-out repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install poetry
      uses: snok/install-poetry@v1

    - name: Install package
      run: poetry install


    # Get the last tag value (i.e 0.6.0)
    # save to a variable called last_tag to be used later
    - name: Get latest tag name
      id: last_tag
      run: echo ::set-output name=tag::$(git describe --tags --abbrev=0 | sed 's/^v//')

   # This action uses Python Semantic Release v8
   # What this action does:
   # - Determines the next version number based on the commit history
    # - Creates a new tag with the new version number
    # - Pushes the new tag to GitHub
    # - Creates a GitHub release with the new version number
    - name: Python Semantic Release
      id: release
      uses: python-semantic-release/python-semantic-release@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install packaging-related tool
      run:
        python3 -m pip install build twine

    # Build Package step:
    # After semantic release, we should have a new tag if the commit history
    # has been updated. If there isnt a new tag, then we dont need to build
    # a new package. If there is a new tag, then we need to build a new package
    # and publish it to PyPI
    - name: Build package
      if: steps.release.outputs.released == 'true'
      run: |
        poetry version $(git describe --tags --abbrev=0 | sed 's/^v//')
        python -m build --sdist --wheel --outdir dist/ .
        ls dist/

    - name: Publish package distributions to PyPI
      if: steps.release.outputs.released == 'true'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

    # # - name: Publish package distributions to GitHub Releases
    # - name: Build and Publish
    #   uses: pypa/gh-action-pypi-publish@release/v1
    #   with:
    #     user: __token__
    #     password: ${{ secrets.TEST_PYPI_API_TOKEN }}
    #     repository_url: https://test.pypi.org/legacy/
    #     build: true
    #     build_command: poetry build
    #     build_command_postfix: dist/*

    # - name: Publish package distributions to PyPI
    #   id: pypi-publish



    # - name: Publish package distributions to GitHub Releases
    #   uses: python-semantic-release/upload-to-gh-release@main
    #   if: steps.release.outputs.released == 'true'
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    # - name: Publish to TestPyPI
    #   uses: pypa/gh-action-pypi-publish@release/v1
    #   with:
    #     user: __token__
    #     password: ${{ secrets.TEST_PYPI_API_TOKEN }}
    #     repository_url: https://test.pypi.org/legacy/

    # - name: Test install from TestPyPI
    #   run: |
    #       pip install \
    #       --index-url https://test.pypi.org/simple/ \
    #       --extra-index-url https://pypi.org/simple \
    #       nbiatoolkit

    # - name: Publish to PyPI
    #   uses: pypa/gh-action-pypi-publish@release/v1
    #   with:
    #     user: __token__
    #     password: ${{ secrets.PYPI_API_TOKEN }}

    # - name: Publish documentation
    #   uses: maxheld83/ghpages@v0.2.1
    #   with:
    #     build_dir: docs/_build/html
    #     target_branch: gh-pages
    #     committer_name: "GitHub Actions"
    #     committer_email: "jermiahjoseph98@gmail.com"