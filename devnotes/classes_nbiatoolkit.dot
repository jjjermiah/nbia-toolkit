digraph "classes_nbiatoolkit" {
rankdir=BT
charset="utf-8"
"nbiatoolkit.nbia.NBIAClient" [color="#77AADD", fontcolor="black", label=<{NBIAClient|OAuth_client<br ALIGN="LEFT"/>base_url<br ALIGN="LEFT"/>headers<br ALIGN="LEFT"/>logger<br ALIGN="LEFT"/>return_type<br ALIGN="LEFT"/>|downloadSeries(SeriesInstanceUID: Union[str, list], downloadDir: str, filePattern: str, overwrite: bool, nParallel: int, Progressbar: bool): bool<br ALIGN="LEFT"/>getBodyPartCounts(Collection: str, Modality: str, return_type: Optional[Union[ReturnType, str]]): List[dict[Any, Any]] \| pd.DataFrame<br ALIGN="LEFT"/>getCollectionDescriptions(collectionName: str, return_type: Optional[Union[ReturnType, str]]): List[dict[Any, Any]] \| pd.DataFrame<br ALIGN="LEFT"/>getCollectionPatientCount(prefix: str, return_type: Optional[Union[ReturnType, str]]): List[dict[Any, Any]] \| pd.DataFrame<br ALIGN="LEFT"/>getCollections(prefix: str, return_type: Optional[Union[ReturnType, str]]): List[dict[Any, Any]] \| pd.DataFrame<br ALIGN="LEFT"/>getDICOMTags(SeriesInstanceUID: str, return_type: Optional[Union[ReturnType, str]]): List[dict[Any, Any]] \| pd.DataFrame<br ALIGN="LEFT"/>getModalityValues(Collection: str, BodyPartExamined: str, Counts: bool, return_type: Optional[Union[ReturnType, str]]): List[dict[Any, Any]] \| pd.DataFrame<br ALIGN="LEFT"/>getNewPatients(Collection: str, Date: Union[str, datetime], return_type: Optional[Union[ReturnType, str]]): List[dict[Any, Any]] \| pd.DataFrame<br ALIGN="LEFT"/>getNewSeries(Date: Union[str, datetime], return_type: Optional[Union[ReturnType, str]]): List[dict[Any, Any]] \| pd.DataFrame<br ALIGN="LEFT"/>getPatients(Collection: str, return_type: Optional[Union[ReturnType, str]]): List[dict[Any, Any]] \| pd.DataFrame<br ALIGN="LEFT"/>getPatientsByCollectionAndModality(Collection: str, Modality: str, return_type: Optional[Union[ReturnType, str]]): List[dict[Any, Any]] \| pd.DataFrame<br ALIGN="LEFT"/>getSeries(Collection: str, PatientID: str, StudyInstanceUID: str, Modality: str, SeriesInstanceUID: str, BodyPartExamined: str, ManufacturerModelName: str, Manufacturer: str, return_type: Optional[Union[ReturnType, str]]): List[dict[Any, Any]] \| pd.DataFrame<br ALIGN="LEFT"/>getSeriesMetadata(SeriesInstanceUID: Union[str, list[str]], return_type: Optional[Union[ReturnType, str]]): List[dict[Any, Any]] \| pd.DataFrame<br ALIGN="LEFT"/>getStudies(Collection: str, PatientID: str, StudyInstanceUID: str, return_type: Optional[Union[ReturnType, str]]): List[dict[Any, Any]] \| pd.DataFrame<br ALIGN="LEFT"/>parsePARAMS(params: dict): dict<br ALIGN="LEFT"/>query_api(endpoint: NBIA_ENDPOINTS, params: dict): List[dict[Any, Any]]<br ALIGN="LEFT"/>}>, shape="record", style="filled"];
"nbiatoolkit.utils.nbia_endpoints.NBIA_BASE_URLS" [color="#BBCC33", fontcolor="black", label=<{NBIA_BASE_URLS|name<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"nbiatoolkit.auth.OAuth2" [color="#77AADD", fontcolor="black", label=<{OAuth2|access_token<br ALIGN="LEFT"/>api_headers<br ALIGN="LEFT"/>base_url : NBIA, str<br ALIGN="LEFT"/>client_id : str<br ALIGN="LEFT"/>expiry_time : NoneType<br ALIGN="LEFT"/>fernet_key<br ALIGN="LEFT"/>password : str<br ALIGN="LEFT"/>refresh_expiration_time<br ALIGN="LEFT"/>refresh_expiry : NoneType<br ALIGN="LEFT"/>refresh_token : str<br ALIGN="LEFT"/>scope : NoneType<br ALIGN="LEFT"/>token_expiration_time<br ALIGN="LEFT"/>token_scope<br ALIGN="LEFT"/>username : str<br ALIGN="LEFT"/>|is_logged_out(): bool<br ALIGN="LEFT"/>is_token_expired(): bool<br ALIGN="LEFT"/>logout(): None<br ALIGN="LEFT"/>refresh_token_or_request_new(): None<br ALIGN="LEFT"/>request_new_access_token()<br ALIGN="LEFT"/>set_token_data(token_data: dict)<br ALIGN="LEFT"/>}>, shape="record", style="filled"];
"nbiatoolkit.utils.nbia_endpoints.ReturnType" [color="#BBCC33", fontcolor="black", label=<{ReturnType|name<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"nbiatoolkit.auth.OAuth2" -> "nbiatoolkit.nbia.NBIAClient" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_oauth2_client", style="solid"];
"nbiatoolkit.utils.nbia_endpoints.NBIA_BASE_URLS" -> "nbiatoolkit.nbia.NBIAClient" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_base_url", style="solid"];
"nbiatoolkit.utils.nbia_endpoints.ReturnType" -> "nbiatoolkit.nbia.NBIAClient" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_return_type", style="solid"];
"nbiatoolkit.utils.nbia_endpoints.ReturnType" -> "nbiatoolkit.nbia.NBIAClient" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_return_type", style="solid"];
}
